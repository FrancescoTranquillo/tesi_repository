scale_colour_viridis_d(option  = "viridis") +
theme_minimal() +
facet_wrap(vars(ESITO.CICLO)) +
coord_flip()
)
ggplotly(
ggplot(data = tabella_scontrini[-which(tabella_scontrini$ALLARMI=="Nessun allarme rilevato"),]) +
aes(color = ALLARMI, x = CATEGORIA)
scale_colour_viridis_d(option  = "viridis") +
theme_minimal() +
facet_wrap(vars(ESITO.CICLO)) +
coord_flip()
)
ggplotly(
ggplot(data = tabella_scontrini[-which(tabella_scontrini$ALLARMI=="Nessun allarme rilevato"),]) +
aes(color = ALLARMI, x = CATEGORIA) +
scale_colour_viridis_d(option  = "viridis") +
theme_minimal() +
facet_wrap(vars(ESITO.CICLO)) +
coord_flip()
)
ggplotly(
ggplot(data = tabella_scontrini[-which(tabella_scontrini$ALLARMI=="Nessun allarme rilevato"),]) +
aes(color = ALLARMI, x = CATEGORIA) +
geom_bar()
scale_colour_viridis_d(option  = "viridis") +
theme_minimal() +
facet_wrap(vars(ESITO.CICLO)) +
coord_flip()
)
ggplotly(
ggplot(data = tabella_scontrini[-which(tabella_scontrini$ALLARMI=="Nessun allarme rilevato"),]) +
aes(color = ALLARMI, x = CATEGORIA) +
geom_bar()+
scale_colour_viridis_d(option  = "viridis") +
theme_minimal() +
facet_wrap(vars(ESITO.CICLO)) +
coord_flip()
)
ggplotly(
ggplot(data = tabella_scontrini[-which(tabella_scontrini$ALLARMI=="Nessun allarme rilevato"),]) +
aes(fill = ALLARMI, x = CATEGORIA) +
geom_bar()+
scale_colour_viridis_d(option  = "viridis") +
theme_minimal() +
facet_wrap(vars(ESITO.CICLO)) +
coord_flip()
)
ggplotly(
ggplot(data = tabella_scontrini[-which(tabella_scontrini$ALLARMI=="Nessun allarme rilevato"),]) +
aes(fill = ALLARMI, x = CATEGORIA) +
geom_bar()+
scale_fill_viridis_d(option  = "viridis") +
theme_minimal() +
facet_wrap(vars(ESITO.CICLO)) +
coord_flip()
)
ggplotly(
ggplot(data = tabella_scontrini[-which(tabella_scontrini$ALLARMI=="Nessun allarme rilevato"),]) +
aes(fill = ALLARMI, x = CATEGORIA) +
geom_bar()+
scale_fill_viridis_d(option  = "viridis",direction = -1) +
theme_minimal() +
facet_wrap(vars(ESITO.CICLO)) +
coord_flip()
)
runApp('ISA-test')
runApp('ISA-test')
seq(as.Date("31-05-2019"))
seq(as.Date("31-05-2019"), as.Date("05-06-2019"))
seq(as.Date("31-05-2019"), as.Date("05-06-2019"))
as.Date("05-06-2019")
seq(tabella_scontrini$`INIZIO CICLO`)
seq(tabella_scontrini$`INIZIO CICLO`[1])
seq(tabella_scontrini$`INIZIO CICLO`[1],to = tabella_scontrini$`INIZIO CICLO`[6],"days")
seq(as.Date(tabella_scontrini$`INIZIO CICLO`[1]),to = as.Date(tabella_scontrini$`INIZIO CICLO`[6]),"days")
giorno <- as.Date(tabella_scontrini$`INIZIO CICLO`[1])
giorno+5
seq(giorno,giorno+5)
seq(giorno,giorno+5,by=1)
int1 <- seq(giorno,giorno+5,by=1)
int2 <- seq(giorno-3,giorno+7,by=1)
int1
int2
int1%in%int2
int1 <- seq(giorno,giorno+10,by=1)
int1%in%int2
as.date(tabella_scontrini$`INIZIO CICLO`)
as.Date(tabella_scontrini$`INIZIO CICLO`[1])
as.Date(tabella_scontrini$`INIZIO CICLO`)
order(as.Date(tabella_scontrini$`INIZIO CICLO`),decreasing = T)
as.Date("21-05-2019")
as.Date("31-05-2019")
as.POSIXct("31-05-2019")
giorno
str(giorno)
int1
int2
intersect(int1,int2)
union(int1,int2)
as.Date(union(int1,int2))
as.Date(union(int1,int2))[2,1,5,3]
as.Date(union(int1,int2))[c(2,1,5,3)]
max(as.Date(union(int1,int2))[c(2,1,5,3)])
min(as.Date(union(int1,int2))[c(2,1,5,3)])
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
tabella_scontrini %>%
select(.$ALLARMI="Allarme temperatura minima acqua")
tabella_scontrini %>%
select(.$ALLARMI=="Allarme temperatura minima acqua")
table(tabella_scontrini)
table(tabella_scontrini$ALLARMI)
tabella_scontrini %>%.[which(.$ALLARMI=="Allarme temperatura massima acqua"),]
df <- tabella_scontrini %>%.[which(.$ALLARMI=="Allarme temperatura massima acqua"),]
esquisser()
table(tabella_scontrini$ALLARMI)
table(tabella_scontrini$OPERATORE)
plot(table(tabella_scontrini$OPERATORE))
tabella_scontrini$OPERATORE)
tabella_scontrini$OPERATORE
esquisser()
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
glimpse(tabella_scontrini)
levels(tabella_scontrini$CATEGORIA)
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
library(devtools)
install_github("nik01010/dashboardthemes")
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
tabella_scontrini <- lapply(scontrino[c(1:2000)], morpher) %>%
bind_rows(.)
tabella_scontrini <- lapply(scontrino[c(1999:2000)], morpher) %>%
bind_rows(.)
tabella_scontrini <- lapply(scontrino[c(1940:2000)], morpher) %>%
bind_rows(.)
f
n
tabella_scontrini <- lapply(scontrino[c(1940:1950)], morpher) %>%
bind_rows(.)
tabella_scontrini <- lapply(scontrino[c(1950:1960)], morpher) %>%
bind_rows(.)
tabella_scontrini <- lapply(scontrino[c(1960:1970)], morpher) %>%
bind_rows(.)
tabella_scontrini <- lapply(scontrino[c(1970:1980)], morpher) %>%
bind_rows(.)
tabella_scontrini <- lapply(scontrino[c(1980:1990)], morpher) %>%
bind_rows(.)
tabella_scontrini <- lapply(scontrino[c(1980:1990)], morpher) %>%
bind_rows(.)
View(df)
df_header
df_header_2
tabella_scontrini <- lapply(scontrino[c(1980:1990)], morpher) %>%
bind_rows(.)
df <- df[,1:11]
shiny::runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp()
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
show_icons()
runApp('ISA-test')
runApp('ISA-test')
library(shiny)
library(shinydashboard)
library(shinyalert)
library(shinyWidgets)
library(DT)
library(esquisse)
library(lubridate)
library(here)
library(shinyBS)
library(plotly)
library(readr)
library(arm)
library(dygraphs)
library(xts)
library(tidyquant)
library(pbapply)
# path <- here("isareport16-19")
# lista_scontrini <- as.list(list.files(path, pattern = "*.txt"))
#
# scontrinol <- lapply(lista_scontrini, function(path_scontrino)
#   readLines(paste0(path, "\\", path_scontrino), encoding = "UTF-8"))
#
# tabella_scontrini <- pblapply(scontrinol, morpher) %>%
#   bind_rows(.)
#
tabella_scontrini <- read.csv2(here("tabella_scontrini_multimacchina.csv"),header = T)
tabella_scontrini$`INIZIO CICLO` <-  parse_date_time(tabella_scontrini$`INIZIO CICLO`, orders = "dmy HMS")
tabella_scontrini$`TIPO CICLO` <- factor(tabella_scontrini$`TIPO CICLO`)
tabella_scontrini$STRUMENTO <- factor(tabella_scontrini$STRUMENTO)
tabella_scontrini$CATEGORIA <- factor(tabella_scontrini$CATEGORIA)
tabella_scontrini$MATRICOLA <- factor(tabella_scontrini$MATRICOLA)
tabella_scontrini$OPERATORE <- factor(tabella_scontrini$OPERATORE)
tabella_scontrini$ALLARMI <- factor(tabella_scontrini$ALLARMI)
tabella_scontrini$`ESITO CICLO` <- factor(tabella_scontrini$`ESITO CICLO`)
# col <-  c(1:2637)
# tabella_scontrini$NUMERO.SERIALE <- as.character(tabella_scontrini$NUMERO.SERIALE)
# tabella_scontrini$NUMERO.SERIALE[col] <- "lava.2"
# tabella_scontrini$NUMERO.SERIALE <- factor(tabella_scontrini$NUMERO.SERIALE)
# colnames(tabella_scontrini)[which(names(tabella_scontrini) == "ESITO CICLO")] <- "ESITO.CICLO"
#
# tabella_scontrini %<>% mutate("GIORNO" = factor(cut.Date(
#   as.Date(.$`INIZIO CICLO`),
#   breaks = "1 day",
#   labels = F
# )))
# df_giorni <- as.list(split(tabella_scontrini, f = tabella_scontrini$GIORNO))
#
#
# n_allarmi <- function(df_giorno){
#   nirreg <-  as.numeric(nrow(df_giorno[-which(df_giorno$ESITO.CICLO=="CICLO REGOLARE"),]))
#   nreg <- as.numeric(nrow(df_giorno[-which(df_giorno$ESITO.CICLO=="CICLO IRREGOLARE"),]))
#
#   giorno <- unique(as.Date(df_giorno$`INIZIO CICLO`))
#   return(data.frame("giorno"=giorno,
#                     "numero di cicli irregolari"=nirreg,
#                     "numero di cicli regolari"=nreg))
#
# }
#
# andamento_allarmi <- lapply(df_giorni,n_allarmi) %>% do.call("rbind",.)
#
#
# ggplot(data = andamento_allarmi,aes(x=giorno,y=numero.di.cicli.irregolari))+
#   geom_line()+
#   geom_smooth()
#
# library(dygraphs)
# library(xts)
#
# cicli_irregolari <- as.xts(ts(start = c(first(andamento_allarmi$giorno)),
#                     end=c(last(andamento_allarmi$giorno)),
#                     data = c(andamento_allarmi$numero.di.cicli.irregolari)))
# cicli_regolari <-  as.xts(ts(start = c(first(andamento_allarmi$giorno)),
#                          end=c(last(andamento_allarmi$giorno)),
#                          data = c(andamento_allarmi$numero.di.cicli.regolari)))
#
# giorni <- cbind(cicli_irregolari,cicli_regolari)
# HoltWinters(giorni$cicli_regolari)
#
# library(v)
# dygraph(giorni) %>% dyRangeSelector() %>% dyRoller(rollPeriod = 14) %>%
#   dyHighlight(highlightCircleSize = 5,
#               highlightSeriesBackgroundAlpha = 0.4,
#               hideOnMouseOut = TRUE) %>%
#
#   dyOptions(colors = c("orange", "green"))
# numero di allarmi per tipo di strumento ---------------------------------
esquisser()
ggplotly(
ggplot(data = tabella_scontrini[-which(tabella_scontrini$ALLARMI=="Nessun allarme rilevato"),]) +
aes(fill = ALLARMI, x = CATEGORIA) +
geom_bar(color="black")+
scale_fill_viridis_d(option  = "viridis",direction = -1) +
theme_minimal() +
scale_x_discrete()+
facet_wrap(vars(ESITO.CICLO)) +
coord_flip()
)
ggplotly(
ggplot(data = tabella_scontrini[-which(tabella_scontrini$ALLARMI=="Nessun allarme rilevato"),]) +
aes(fill = ALLARMI, x = CATEGORIA) +
geom_bar(color="black",show.legend = F)+
scale_fill_viridis_d(option  = "viridis",direction = -1) +
theme_minimal() +
scale_x_discrete()+
facet_wrap(vars(ESITO.CICLO)) +
coord_flip()
)
ggplotly(
ggplot(data = tabella_scontrini[-which(tabella_scontrini$ALLARMI=="Nessun allarme rilevato"),]) +
aes(fill = ALLARMI, x = CATEGORIA) +
geom_bar(color="black",width = 0.5)+
scale_fill_viridis_d(option  = "viridis",direction = -1) +
theme_minimal() +
scale_x_discrete()+
facet_wrap(vars(ESITO.CICLO)) +
coord_flip()
)
ggplotly(
ggplot(data = tabella_scontrini[-which(tabella_scontrini$ALLARMI=="Nessun allarme rilevato"),]) +
aes(fill = ALLARMI, x = CATEGORIA) +
geom_bar(color="black",width = 0.5,size=0.5)+
scale_fill_viridis_d(option  = "viridis",direction = -1) +
theme_minimal() +
scale_x_discrete()+
facet_wrap(vars(ESITO.CICLO)) +
coord_flip()
)
ggplotly(
ggplot(data = tabella_scontrini[-which(tabella_scontrini$ALLARMI=="Nessun allarme rilevato"),]) +
aes(fill = ALLARMI, x = CATEGORIA) +
geom_bar(color="black",width = 0.5,size=3)+
scale_fill_viridis_d(option  = "viridis",direction = -1) +
theme_minimal() +
scale_x_discrete()+
facet_wrap(vars(ESITO.CICLO)) +
coord_flip()
)
ggplotly(
ggplot(data = tabella_scontrini[-which(tabella_scontrini$ALLARMI=="Nessun allarme rilevato"),]) +
aes(fill = ALLARMI, x = CATEGORIA) +
geom_bar(color="black",width = 0.5,size=0.2)+
scale_fill_viridis_d(option  = "viridis",direction = -1) +
theme_minimal() +
scale_x_discrete()+
facet_wrap(vars(ESITO.CICLO)) +
coord_flip()
)
ggplotly(
ggplot(data = tabella_scontrini[-which(tabella_scontrini$ALLARMI=="Nessun allarme rilevato"),]) +
aes(fill = ALLARMI, x = CATEGORIA) +
geom_bar(color="black",width = 2.5,size=0.2)+
scale_fill_viridis_d(option  = "viridis",direction = -1) +
theme_minimal() +
scale_x_discrete()+
facet_wrap(vars(ESITO.CICLO)) +
coord_flip()
)
ggplotly(
ggplot(data = tabella_scontrini[-which(tabella_scontrini$ALLARMI=="Nessun allarme rilevato"),]) +
aes(fill = ALLARMI, x = CATEGORIA) +
geom_bar(color="black",width = 1,size=0.2)+
scale_fill_viridis_d(option  = "viridis",direction = -1) +
theme_minimal() +
scale_x_discrete()+
facet_wrap(vars(ESITO.CICLO)) +
coord_flip()
)
ggplotly(
ggplot(data = tabella_scontrini[-which(tabella_scontrini$ALLARMI=="Nessun allarme rilevato"),]) +
aes(fill = ALLARMI, x = CATEGORIA) +
geom_bar(color="black",width = 0.8,size=0.2)+
scale_fill_viridis_d(option  = "viridis",direction = -1) +
theme_minimal() +
scale_x_discrete()+
facet_wrap(vars(ESITO.CICLO)) +
coord_flip()
)
ggplotly(
ggplot(data = tabella_scontrini[-which(tabella_scontrini$ALLARMI=="Nessun allarme rilevato"),]) +
aes(fill = ALLARMI, x = CATEGORIA) +
geom_bar(color="black",width = 0.8,size=0.2)+
scale_fill_viridis_d(option  = "plasma",direction = -1) +
theme_minimal() +
scale_x_discrete()+
facet_wrap(vars(ESITO.CICLO)) +
coord_flip()
)
ggplotly(
ggplot(data = tabella_scontrini[-which(tabella_scontrini$ALLARMI=="Nessun allarme rilevato"),]) +
aes(fill = ALLARMI, x = CATEGORIA) +
geom_bar(color="black",width = 0.8,size=0.2,position = "dodge")+
scale_fill_viridis_d(option  = "plasma",direction = -1) +
theme_minimal() +
scale_x_discrete()+
facet_wrap(vars(ESITO.CICLO)) +
coord_flip()
)
ggplotly(
ggplot(data = tabella_scontrini[-which(tabella_scontrini$ALLARMI=="Nessun allarme rilevato"),]) +
aes(fill = ALLARMI, x = CATEGORIA) +
geom_bar(color="black",width = 0.8,size=0.2)+
scale_fill_viridis_d(option  = "inferno",direction = -1) +
theme_minimal() +
scale_x_discrete()+
facet_wrap(vars(ESITO.CICLO)) +
coord_flip()
)
ggplotly(
ggplot(data = tabella_scontrini[-which(tabella_scontrini$ALLARMI=="Nessun allarme rilevato"),]) +
aes(fill = ALLARMI, x = CATEGORIA) +
geom_bar(color="black",width = 0.8,size=0.2)+
scale_fill_viridis_d(option  = "viridis",direction = 1) +
theme_minimal() +
scale_x_discrete()+
facet_wrap(vars(ESITO.CICLO)) +
coord_flip()
)
esquisser()
col <-  c(1:2637)
tabella_scontrini$NUMERO.SERIALE <- as.character(tabella_scontrini$NUMERO.SERIALE)
tabella_scontrini$NUMERO.SERIALE[col] <- "lava.2"
tabella_scontrini$NUMERO.SERIALE <- factor(tabella_scontrini$NUMERO.SERIALE)
colnames(tabella_scontrini)[which(names(tabella_scontrini) == "ESITO CICLO")] <- "ESITO.CICLO"
esquisser()
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
# path <- here("isareport16-19")
# lista_scontrini <- as.list(list.files(path, pattern = "*.txt"))
#
# scontrinol <- lapply(lista_scontrini, function(path_scontrino)
#   readLines(paste0(path, "\\", path_scontrino), encoding = "UTF-8"))
#
# tabella_scontrini <- pblapply(scontrinol, morpher) %>%
#   bind_rows(.)
#
tabella_scontrini <- read.csv2(here("tabella_scontrini_multimacchina.csv"),header = T)
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
readLines(paste0(path, "\\", lista_scontrini[34]), encoding = "UTF-8")
path <- here("isareport16-19")
lista_scontrini <- as.list(list.files(path, pattern = "*.txt"))
readLines(paste0(path, "\\", lista_scontrini[34]), encoding = "UTF-8")
readLines(paste0(path, "\\", lista_scontrini[34]), encoding = "UTF-8")
cat(readLines(paste0(path, "\\", lista_scontrini[34]), encoding = "UTF-8"))
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
scontrino_txt()[[2]]
paste(scontrino_txt()[[2]],collapse = "\\n")
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
rawText
splitText
runApp('ISA-test')
rawText
runApp('ISA-test')
splitText
runApp('ISA-test')
lapply(splitText, p)
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
shiny::runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
runApp('ISA-test')
